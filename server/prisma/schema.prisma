generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Provider {
  USERNAME
  GOOGLE
  GITHUB
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  password    String
  provider    Provider
  provider_id String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  ownedCommunities Community[] @relation("UserOwnedCommunities")
  inCommunities    Community[] @relation("UserInCommunities")
  posts            Post[]
  comments         Comment[]
}

model Community {
  id         String   @id @default(uuid())
  userId     String
  title      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  owner   User   @relation("UserOwnedCommunities", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  members User[] @relation("UserInCommunities")
  posts   Post[]
}

model Post {
  id          String   @id @default(uuid())
  userId      String
  communityId String
  title       String
  body        String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  owner     User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  community Community @relation(fields: [communityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comments  Comment[]
}

model Comment {
  id         String   @id @default(uuid())
  postId     String
  userId     String
  parentId   String
  body       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  owner User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  post  Post @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  children Comment[] @relation("CommentChildren")
  parent   Comment?  @relation("CommentChildren", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
