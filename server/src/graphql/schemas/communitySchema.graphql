scalar DateTime

type Query @rateLimit(limit: 300, duration: 60) {
  community(input: CommunityInput!): Community
  communities(input: CommunitiesInput!): CommunityConnection!
  titleExists(title: String!): Boolean!
}

type Mutation {
  createCommunity(input: CreateCommunityInput!): CreateCommunityResult! @rateLimit(limit: 100, duration: 60)
  userJoinCommunity(input: UserJoinCommunityInput!): UserJoinCommunityResult! @rateLimit(limit: 300, duration: 60)
  changeCommunityTitle(input: ChangeCommunityTitleInput!): ChangeCommunityTitleResult!
    @rateLimit(limit: 200, duration: 300)
  deleteCommunity(input: DeleteCommunityInput!): DeleteCommunityResult! @rateLimit(limit: 200, duration: 300)
}

type Community {
  id: ID!
  title: String!
  created_at: DateTime!
  updated_at: DateTime!

  inCommunity: Boolean!
  memberCount: Int!
  postCount: Int!

  owner: User!
}

# -- COMMUNITY QUERY
input CommunityInput {
  id: ID!
}

# -- COMMUNITIES QUERY
input CommunitiesInput {
  filters: CommunitiesFilters!
  paginate: PaginateInput!
}

input CommunitiesFilters {
  titleContains: String
  ownerId: String
  memberId: String
}

# -- CREATECOMMUNITY MUTATION
union CreateCommunityResult = CreateCommunitySuccess | CreateCommunityInputError

input CreateCommunityInput {
  title: String!
}

type CreateCommunitySuccess implements Success {
  successMsg: String!
  code: Int!
}

type CreateCommunityInputError implements Error {
  errorMsg: String!
  code: Int!
  inputErrors: CreateCommunityInputErrors!
}

type CreateCommunityInputErrors {
  title: String
}

# -- CHANGETITLE MUTATION
input ChangeCommunityTitleInput {
  id: ID!
  newTitle: String!
}

union ChangeCommunityTitleResult = ChangeCommunityTitleSuccess | ChangeCommunityTitleInputError

type ChangeCommunityTitleSuccess implements Success {
  successMsg: String!
  code: Int!
  community: Community!
}

type ChangeCommunityTitleInputError implements Error {
  errorMsg: String!
  code: Int!
  inputErrors: ChangeCommunityTitleInputErrors!
}

type ChangeCommunityTitleInputErrors {
  newTitle: String!
}

# -- DELETECOMMUNITY MUTATION
input DeleteCommunityInput {
  id: ID!
  title: String!
}

union DeleteCommunityResult = DeleteCommunitySuccess | DeleteCommunityInputError

type DeleteCommunitySuccess implements Success {
  successMsg: String!
  code: Int!
}

type DeleteCommunityInputError implements Error {
  errorMsg: String!
  code: Int!
  inputErrors: DeleteCommunityInputErrors
}

type DeleteCommunityInputErrors {
  title: String
}

# -- USERJOINCOMMUNITY MUTATION
union UserJoinCommunityResult = UserJoinCommunitySuccess

input UserJoinCommunityInput {
  communityId: String!
}

type UserJoinCommunitySuccess implements Success {
  successMsg: String!
  code: Int!
  community: Community!
}
