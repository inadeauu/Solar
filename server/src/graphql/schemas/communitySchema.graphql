scalar DateTime

type Query {
  titleExists(title: String!): Boolean!
}

type Mutation {
  createCommunity(input: CreateCommunityInput!): CreateCommunityResult!
}

type Community {
  id: ID!
  title: String!
  created_at: DateTime!
  updated_at: DateTime!

  owner: User!
  members: [User!]!
  posts: [Post!]!
}

# -- PAGINATION
type CommunityEdge {
  node: Community!
  cursor: String!
}

type CommunityConnection {
  edges: [CommunityEdge!]!
  pageInfo: PageInfo!
}

# -- CREATECOMMUNITY MUTATION
union CreateCommunityResult =
    CreateCommunitySuccess
  | CreateCommunityInputError
  | AuthenticationError

input CreateCommunityInput {
  title: String!
}

type CreateCommunitySuccess implements Success {
  successMsg: String!
  code: Int!
}

type CreateCommunityInputError implements Error {
  errorMsg: String!
  code: Int!
  inputErrors: CreateCommunityInputErrors!
}

type CreateCommunityInputErrors {
  title: String
}
