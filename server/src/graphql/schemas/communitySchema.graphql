scalar DateTime

type Query @rateLimit(limit: 120, duration: 60) {
  community(input: CommunityInput!): Community
  communities(input: CommunitiesInput!): CommunityConnection!
  titleExists(title: String!): Boolean! @rateLimit(limit: 200, duration: 60)
}

type Mutation {
  createCommunity(input: CreateCommunityInput!): CreateCommunityResult!
    @rateLimit(limit: 5, duration: 60)
  userJoinCommunity(input: UserJoinCommunityInput!): UserJoinCommunityResult!
    @rateLimit(limit: 20, duration: 60)
}

type Community {
  id: ID!
  title: String!
  created_at: DateTime!
  updated_at: DateTime!

  inCommunity: Boolean!
  memberCount: Int!
  postCount: Int!

  owner: User!
  members(input: CommunityMembersInput!): UserConnection!
  posts(input: CommunityPostsInput!): PostConnection!
}

# -- PAGINATION
type CommunityEdge {
  node: Community!
  cursor: String!
}

type CommunityConnection {
  edges: [CommunityEdge!]!
  pageInfo: PageInfo!
}

# -- COMMUNITY QUERY
input CommunityInput {
  id: ID!
}

# -- COMMUNITIES QUERY
input CommunitiesInput {
  filters: CommunitiesFilters
  paginate: PaginateInput!
}

input CommunitiesFilters {
  titleContains: String
  orderBy: CommunitiesOrderBy
}

input CommunitiesOrderBy {
  type: CommunityOrderByType!
  dir: OrderByDir!
}

# -- CREATECOMMUNITY MUTATION
union CreateCommunityResult =
    CreateCommunitySuccess
  | CreateCommunityInputError
  | AuthenticationError

input CreateCommunityInput {
  title: String!
}

type CreateCommunitySuccess implements Success {
  successMsg: String!
  code: Int!
}

type CreateCommunityInputError implements Error {
  errorMsg: String!
  code: Int!
  inputErrors: CreateCommunityInputErrors!
}

type CreateCommunityInputErrors {
  title: String
}

# -- USERJOINCOMMUNITY MUTATION
union UserJoinCommunityResult =
    UserJoinCommunitySuccess
  | UserJoinCommunityInputError
  | AuthenticationError

input UserJoinCommunityInput {
  communityId: String!
}

type UserJoinCommunitySuccess implements Success {
  successMsg: String!
  code: Int!
  inCommunity: Boolean!
}

type UserJoinCommunityInputError implements Error {
  errorMsg: String!
  code: Int!
  inputErrors: UserJoinCommunityInputErrors!
}

type UserJoinCommunityInputErrors {
  communityId: String
}

# -- ENUMS
enum CommunityOrderByType {
  memberCount
}

# -- RESOLVERS
input CommunityMembersInput {
  paginate: PaginateInput!
}

input CommunityPostsInput {
  paginate: PaginateInput!
}
