scalar DateTime

type Query {
  user(input: UserInput!): User
  users(input: UsersInput!): UserConnection!
}

type User {
  id: ID!
  username: String!
  email: String!
  email_verified: Boolean!
  provider: Provider!
  image: String
  created_at: DateTime!
  updated_at: DateTime!

  ownedCommunities(input: UserOwnedCommunitiesInput!): CommunityConnection!
  inCommunities(input: UserInCommunitiesInput!): CommunityConnection!
  posts(input: UserPostInput!): PostConnection!
}

# -- USERS QUERY
input UsersInput {
  filters: UsersFilters
  paginate: PaginateInput!
}

input UsersFilters {
  usernameContains: String
  orderBy: UsersOrderBy
}

input UsersOrderBy {
  type: UserOrderByType!
  dir: OrderByDir!
}

# -- USER QUERY
input UserInput {
  id: ID!
}

# -- ENUMS
enum Provider {
  EMAIL
  GOOGLE
  GITHUB
}

enum UserOrderByType {
  username
  postCount
}

# -- PAGINATION
type UserEdge {
  node: User!
  cursor: String!
}

type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

# -- RESOLVERS
input UserOwnedCommunitiesInput {
  paginate: PaginateInput!
}

input UserInCommunitiesInput {
  paginate: PaginateInput!
}

input UserPostInput {
  paginate: PaginateInput!
}
